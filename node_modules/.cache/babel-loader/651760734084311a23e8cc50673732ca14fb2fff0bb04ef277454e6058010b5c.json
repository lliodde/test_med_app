{"ast":null,"code":"var _jsxFileName = \"/home/project/test_med_app/src/Components/InstantConsultation/InstantConsultation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback, createElement as _createElement } from 'react';\nimport './InstantConsultation.css';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport FindDoctorSearchIC from './FindDoctorSearchIC/FindDoctorSearchIC';\nimport DoctorCardIC from './DoctorCardIC/DoctorCardIC';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InstantConsultation = () => {\n  _s();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [allDoctors, setAllDoctors] = useState([]);\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\n  const navigate = useNavigate();\n\n  // 1. Fetch all doctors once when the component first loads\n  useEffect(() => {\n    fetch('https://api.npoint.io/9a5543d36f1460da2f63').then(res => res.json()).then(data => {\n      setAllDoctors(data);\n    }).catch(err => console.log(err));\n  }, []); // Empty array means this runs only once\n\n  // 2. This effect runs whenever the list of all doctors or the URL's search query changes\n  useEffect(() => {\n    const speciality = searchParams.get('speciality');\n    if (speciality) {\n      const filtered = allDoctors.filter(doctor => doctor.speciality.toLowerCase().includes(speciality.toLowerCase()));\n      setFilteredDoctors(filtered);\n    } else {\n      setFilteredDoctors([]); // If no speciality, show no doctors until searched\n    }\n  }, [searchParams, allDoctors]);\n\n  // 3. This function is passed to the search component. It now just updates the URL.\n  const handleSearch = speciality => {\n    setSearchParams({\n      speciality: speciality\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchpage-container\",\n      children: [/*#__PURE__*/_jsxDEV(FindDoctorSearchIC, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results-container\",\n        children: searchParams.get('speciality') && /*#__PURE__*/_jsxDEV(\"center\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [filteredDoctors.length, \" doctors found\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Book appointments with minimum wait-time & verified doctor details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), filteredDoctors.length > 0 ? filteredDoctors.map(doctor => /*#__PURE__*/_createElement(DoctorCardIC, {\n            className: \"doctorcard\",\n            ...doctor,\n            key: doctor.name,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 63\n            }\n          })) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No doctors found for this specialty.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(InstantConsultation, \"a98nJk5CM89GUjNUxt0VU/Fy9Kk=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = InstantConsultation;\nexport default InstantConsultation;\nvar _c;\n$RefreshReg$(_c, \"InstantConsultation\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","createElement","_createElement","useNavigate","useSearchParams","FindDoctorSearchIC","DoctorCardIC","jsxDEV","_jsxDEV","InstantConsultation","_s","searchParams","setSearchParams","allDoctors","setAllDoctors","filteredDoctors","setFilteredDoctors","navigate","fetch","then","res","json","data","catch","err","console","log","speciality","get","filtered","filter","doctor","toLowerCase","includes","handleSearch","children","className","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","length","map","key","name","__self","__source","_c","$RefreshReg$"],"sources":["/home/project/test_med_app/src/Components/InstantConsultation/InstantConsultation.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport './InstantConsultation.css';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport FindDoctorSearchIC from './FindDoctorSearchIC/FindDoctorSearchIC';\r\nimport DoctorCardIC from './DoctorCardIC/DoctorCardIC';\r\n\r\nconst InstantConsultation = () => {\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const [allDoctors, setAllDoctors] = useState([]);\r\n    const [filteredDoctors, setFilteredDoctors] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    // 1. Fetch all doctors once when the component first loads\r\n    useEffect(() => {\r\n        fetch('https://api.npoint.io/9a5543d36f1460da2f63')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setAllDoctors(data);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, []); // Empty array means this runs only once\r\n\r\n    // 2. This effect runs whenever the list of all doctors or the URL's search query changes\r\n    useEffect(() => {\r\n        const speciality = searchParams.get('speciality');\r\n        if (speciality) {\r\n            const filtered = allDoctors.filter(doctor =>\r\n                doctor.speciality.toLowerCase().includes(speciality.toLowerCase())\r\n            );\r\n            setFilteredDoctors(filtered);\r\n        } else {\r\n            setFilteredDoctors([]); // If no speciality, show no doctors until searched\r\n        }\r\n    }, [searchParams, allDoctors]);\r\n\r\n    // 3. This function is passed to the search component. It now just updates the URL.\r\n    const handleSearch = (speciality) => {\r\n        setSearchParams({ speciality: speciality });\r\n    };\r\n\r\n    return (\r\n        <center>\r\n            <div className=\"searchpage-container\">\r\n                <FindDoctorSearchIC onSearch={handleSearch} />\r\n                <div className=\"search-results-container\">\r\n                    {/* Only show results if a search has been performed */}\r\n                    {searchParams.get('speciality') && (\r\n                        <center>\r\n                            <h2>{filteredDoctors.length} doctors found</h2>\r\n                            <h3>Book appointments with minimum wait-time & verified doctor details</h3>\r\n                            {filteredDoctors.length > 0 ? (\r\n                                filteredDoctors.map(doctor => <DoctorCardIC className=\"doctorcard\" {...doctor} key={doctor.name} />)\r\n                            ) : (\r\n                                <p>No doctors found for this specialty.</p>\r\n                            )}\r\n                        </center>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </center>\r\n    );\r\n}\r\n\r\nexport default InstantConsultation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}