{"ast":null,"code":"var _jsxFileName = \"/home/project/test_med_app/src/Components/SignUp/SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { API_URL } from '../../config';\nimport './SignUp.css'; // Corrected CSS import path\n\n// Component renamed to \"SignUp\" to follow PascalCase convention\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  // State variables to hold the form data\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [password, setPassword] = useState('');\n  const [showerr, setShowerr] = useState(''); // State for showing error messages\n  const navigate = useNavigate();\n\n  // Function to handle form submission\n  const register = async e => {\n    e.preventDefault(); // Prevent page from reloading\n\n    // Call the registration API\n    const response = await fetch(`${API_URL}/api/auth/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        phone\n      })\n    });\n    const json = await response.json();\n    if (json.authtoken) {\n      // If registration is successful, store the auth token and user details\n      sessionStorage.setItem(\"auth-token\", json.authtoken);\n      sessionStorage.setItem(\"name\", name);\n      sessionStorage.setItem(\"phone\", phone);\n      sessionStorage.setItem(\"email\", email);\n\n      // Navigate to the home page and reload\n      navigate(\"/\");\n      window.location.reload();\n    } else {\n      // Handle errors from the API\n      if (json.errors) {\n        const errorMsg = json.errors.map(error => error.msg).join(', ');\n        setShowerr(errorMsg);\n      } else {\n        setShowerr(json.error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-text\",\n        children: [\"Already a member? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: register,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: name,\n            onChange: e => setName(e.target.value),\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            className: \"form-control\",\n            placeholder: \"Enter your name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: phone,\n            onChange: e => setPhone(e.target.value),\n            type: \"tel\",\n            name: \"phone\",\n            id: \"phone\",\n            className: \"form-control\",\n            placeholder: \"Enter your phone number\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            className: \"form-control\",\n            placeholder: \"Enter your email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            className: \"form-control\",\n            placeholder: \"Enter your password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), showerr && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"err-msg\",\n          children: showerr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn-submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"reset\",\n            className: \"btn-reset\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n// Export the \"SignUp\" component\n_s(SignUp, \"6C57YXDbi4Tj26c9LumfTvsWLw0=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","Link","useNavigate","API_URL","jsxDEV","_jsxDEV","SignUp","_s","name","setName","email","setEmail","phone","setPhone","password","setPassword","showerr","setShowerr","navigate","register","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","json","authtoken","sessionStorage","setItem","window","location","reload","errors","errorMsg","map","error","msg","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onSubmit","htmlFor","value","onChange","target","type","id","placeholder","required","_c","$RefreshReg$"],"sources":["/home/project/test_med_app/src/Components/SignUp/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { API_URL } from '../../config';\nimport './SignUp.css'; // Corrected CSS import path\n\n// Component renamed to \"SignUp\" to follow PascalCase convention\nconst SignUp = () => {\n    // State variables to hold the form data\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [phone, setPhone] = useState('');\n    const [password, setPassword] = useState('');\n    const [showerr, setShowerr] = useState(''); // State for showing error messages\n    const navigate = useNavigate();\n\n    // Function to handle form submission\n    const register = async (e) => {\n        e.preventDefault(); // Prevent page from reloading\n\n        // Call the registration API\n        const response = await fetch(`${API_URL}/api/auth/register`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ name, email, password, phone }),\n        });\n\n        const json = await response.json();\n\n        if (json.authtoken) {\n            // If registration is successful, store the auth token and user details\n            sessionStorage.setItem(\"auth-token\", json.authtoken);\n            sessionStorage.setItem(\"name\", name);\n            sessionStorage.setItem(\"phone\", phone);\n            sessionStorage.setItem(\"email\", email);\n\n            // Navigate to the home page and reload\n            navigate(\"/\");\n            window.location.reload();\n        } else {\n            // Handle errors from the API\n            if (json.errors) {\n                const errorMsg = json.errors.map(error => error.msg).join(', ');\n                setShowerr(errorMsg);\n            } else {\n                setShowerr(json.error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"signup-container\">\n            <div className=\"signup-form-container\">\n                <h1>Sign Up</h1>\n                <p className=\"sub-text\">\n                    Already a member? <Link to=\"/login\">Login</Link>\n                </p>\n\n                {/* The form now calls the 'register' function on submission */}\n                <form onSubmit={register}>\n                    {/* Name Input */}\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input value={name} onChange={(e) => setName(e.target.value)} type=\"text\" name=\"name\" id=\"name\" className=\"form-control\" placeholder=\"Enter your name\" required />\n                    </div>\n\n                    {/* Phone Input */}\n                    <div className=\"form-group\">\n                        <label htmlFor=\"phone\">Phone</label>\n                        <input value={phone} onChange={(e) => setPhone(e.target.value)} type=\"tel\" name=\"phone\" id=\"phone\" className=\"form-control\" placeholder=\"Enter your phone number\" required />\n                    </div>\n                    \n                    {/* Email Input */}\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input value={email} onChange={(e) => setEmail(e.target.value)} type=\"email\" name=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Enter your email\" required />\n                    </div>\n\n                    {/* Password Input */}\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\" name=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Enter your password\" required />\n                    </div>\n\n                    {/* Display API errors here */}\n                    {showerr && <div className=\"err-msg\">{showerr}</div>}\n\n                    <div className=\"btn-group\">\n                        <button type=\"submit\" className=\"btn-submit\">Submit</button>\n                        <button type=\"reset\" className=\"btn-reset\">Reset</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\n// Export the \"SignUp\" component\nexport default SignUp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}