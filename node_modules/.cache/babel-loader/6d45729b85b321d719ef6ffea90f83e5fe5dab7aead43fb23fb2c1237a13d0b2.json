{"ast":null,"code":"var _jsxFileName = \"/home/project/test_med_app/src/Components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { API_URL } from '../../config';\nimport './Login.css'; // Make sure you have this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // State variables to hold the form data\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate();\n\n  // If a user is already logged in, redirect them to the home page\n  useEffect(() => {\n    if (sessionStorage.getItem(\"auth-token\")) {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n  // Function to handle the login form submission\n  const login = async e => {\n    e.preventDefault();\n\n    // Call the login API endpoint\n    const res = await fetch(`${API_URL}/api/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    });\n    const json = await res.json();\n    if (json.authtoken) {\n      // If login is successful, store the auth token and email\n      sessionStorage.setItem('auth-token', json.authtoken);\n      sessionStorage.setItem('email', email);\n\n      // Redirect to home page and reload\n      navigate('/');\n      window.location.reload();\n    } else {\n      // Show an alert if there are errors\n      if (json.errors) {\n        const errorMsg = json.errors.map(error => error.msg).join(', ');\n        alert(errorMsg);\n      } else {\n        alert(json.error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-text\",\n        children: [\"Are you a new member? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Sign Up Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: login,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            className: \"form-control\",\n            placeholder: \"Enter your email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            className: \"form-control\",\n            placeholder: \"Enter your password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn-submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"reset\",\n            className: \"btn-reset\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"lwUXq8XoL2UJow6qhme38biZ/rs=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","API_URL","jsxDEV","_jsxDEV","Login","_s","password","setPassword","email","setEmail","navigate","sessionStorage","getItem","login","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","json","authtoken","setItem","window","location","reload","errors","errorMsg","map","error","msg","join","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onSubmit","htmlFor","value","onChange","target","type","name","id","placeholder","required","_c","$RefreshReg$"],"sources":["/home/project/test_med_app/src/Components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { API_URL } from '../../config';\nimport './Login.css'; // Make sure you have this CSS file\n\nconst Login = () => {\n    // State variables to hold the form data\n    const [password, setPassword] = useState(\"\");\n    const [email, setEmail] = useState('');\n    const navigate = useNavigate();\n\n    // If a user is already logged in, redirect them to the home page\n    useEffect(() => {\n        if (sessionStorage.getItem(\"auth-token\")) {\n            navigate(\"/\");\n        }\n    }, [navigate]);\n\n    // Function to handle the login form submission\n    const login = async (e) => {\n        e.preventDefault();\n        \n        // Call the login API endpoint\n        const res = await fetch(`${API_URL}/api/auth/login`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                email: email,\n                password: password,\n            }),\n        });\n\n        const json = await res.json();\n        \n        if (json.authtoken) {\n            // If login is successful, store the auth token and email\n            sessionStorage.setItem('auth-token', json.authtoken);\n            sessionStorage.setItem('email', email);\n\n            // Redirect to home page and reload\n            navigate('/');\n            window.location.reload();\n        } else {\n            // Show an alert if there are errors\n            if (json.errors) {\n                const errorMsg = json.errors.map(error => error.msg).join(', ');\n                alert(errorMsg);\n            } else {\n                alert(json.error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"login-container\">\n            <div className=\"login-form-container\">\n                <h1>Login</h1>\n                <p className=\"sub-text\">\n                    Are you a new member? <Link to=\"/signup\">Sign Up Here</Link>\n                </p>\n                <form onSubmit={login}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            type=\"email\"\n                            name=\"email\"\n                            id=\"email\"\n                            className=\"form-control\"\n                            placeholder=\"Enter your email\"\n                            required\n                        />\n                    </div>\n                    {/* COMPLETED: Added the password input field */}\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"password\"\n                            className=\"form-control\"\n                            placeholder=\"Enter your password\"\n                            required\n                        />\n                    </div>\n                    <div className=\"btn-group\">\n                        <button type=\"submit\" className=\"btn-submit\">Login</button>\n                        <button type=\"reset\" className=\"btn-reset\">Reset</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}